name: Django-app workflow
on: [push]
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: 'infra'
          overwrite: true
          target: '.'
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd infra
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            echo EMAIL_ADMIN=${{ secrets.EMAIL_ADMIN }} >> .env
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
            echo EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} >> .env
            sudo docker compose down
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
            sudo docker compose up -d
            sudo docker compose exec -T web python manage.py makemigrations
            sudo docker compose exec -T web python manage.py migrate
            sudo docker compose exec -T web python manage.py collectstatic --no-input
            sudo docker compose exec -T web python manage.py loaddata fixtures.json
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
